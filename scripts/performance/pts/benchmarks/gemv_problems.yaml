---
include: ../../../../clients/include/rocblas_common.yaml

Definitions:
  - &m_equals_n_range
    - { scan: [32..992..32], M: *c_scan_value, N: *c_scan_value, lda: *c_scan_value }

Tests:
  - name: gemv_bench_const_n
    category: bench
    function: gemv
    precision: *single_precision
    transA: [ N, T ]
    alpha: 1
    incx: 1
    incy: 1
    N: 32
    M: 32..480..32
    lda: 480 # TODO: easy way to increment lda in lockstep with M?
    iters: 20

  - name: gemv_bench_const_m
    category: bench
    function: gemv
    precision: *single_precision
    transA: [ N, T ]
    alpha: 1
    incx: 1
    incy: 1
    N: 32..480..32
    M: 32
    lda: 32
    iters: 20

  - name: gemv_bench_m_equals_n
    category: bench
    function: gemv
    precision: *single_precision
    transA: [ N, T ]
    alpha: 1
    incx: 1
    incy: 1
    matrix_size: *m_equals_n_range
    iters: 20

  - name: gemv_bench_const_n_complex
    category: bench
    function: gemv
    precision: *single_precision_complex
    transA: [ N ]
    alpha: 2
    alphai: 3
    incx: 1
    incy: 1
    N: 32
    M: 32..256..32
    lda: 256
    iters: 10
...
